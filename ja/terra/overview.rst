概要
========

「Terra」要素(「地」の意) は、他の要素「Aer」「Ignis」「Aqua」を支える土台になります。
量子プログラムの構成基盤を回路やパルスレベルで提供し、特定の装置の制約に対して最適化を行い、
リモート装置に対する複数の実験の実行を管理します。
「Terra」は、素晴らしいユーザー体験インターフェースを定義すると同時に効果的な最適化レイヤー処理、
パルススケジューリング、バックエンド通信を定義します。


Terra の構成
------------------

*examples* ディレクトリには Python サンプルプログラム、*test* ディレクトリにはテストスクリプトがあります。
*qiskit* ディレクトリが Terra のメインモジュールです。モジュールには次の6個の主要パーツがあります。


量子回路
^^^^^^^^^^^^^^^^

「量子回路」は量子コンピューティングのモデルです。「量子回路」内では qubit のレジスター上で一連の量子演算子
(通常はゲート) を操作することで計算を行います。通常「量子回路」は :math:`|0,…,0>` 状態の qubit から始まり
(特に指定がない場合も)、qubit はゲートによって古典コンピュータでは効率的に表現できない状態に変えられます。
状態から情報を取得するには量子回路を測定する必要があります。測定は量子システムの根本的な性質によりランダムな出力を、
効率的に表現可能な古典レジスターにマップします。


トランスパイラ
^^^^^^^^^^^^^^

量子コンピューティング研究の多くは、実際の装置上でどのように量子回路を実行するかになります。
装置内では測定誤差とデコヒーレンスにより、計算中にエラーが入り込みます。
堅牢な実装を得るには、ゲート数と量子回路の総実行時間の削減が重要です。
「トランスパイラ」ではパスマネージャの概念を導入しました。
ユーザーは最適化を実行し、与えたアルゴリズムに対するより良い量子回路を発見できます。
なおトランスパイラと呼ばれる理由は、最終結果が回路であることに変わりはないためです。


ツール
^^^^^^

このディレクトリ内のツールを利用して Terra を簡単に利用できます。
「関数」は量子回路を実行します。このとき特定の「バックエンド」用の最適化を気にする必要はありません。
「コンパイラ」はトランスパイラを使用して、量子回路の配列を「バックエンド」で実行可能な
`qobj` (quantum オブジェクト) にマップします。
`qobj` はリモートの「バックエンド」に簡単に送信できる JSON 形式の便利な表現です。
ほかにジョブ、バックエンド、トランスパイラタスクの並列化を監視する関数もあります。


バックエンドと結果
^^^^^^^^^^^^^^^^^^^^^^^^^^

いったん「バックエンド」で実行する `qobj` を作成すると、次にこれを操作する便利な方法が必要になります。
「Terra」では、3つのパーツ「プロバイダ」「バックエンド」「ジョブ」を使用します。

「プロバイダ」は異なる「バックエンド」
(例えば `IBM Q <https://www.research.ibm.com/ibm-q/technology/devices/>`_ を介して利用可能なバックエンド) のグループ
へのアクセスを提供します。
「バックエンド」とやり取りをすることで利用可能なバックエンドを見つけたり、特定の「バックエンド」のインスタンスを取得できます。

「バックエンド」はシミュレータまたは実際の量子コンピュータを表し、量子回路の実行と結果に責任を持ちます。
実行メソッドは `qobj` を入力に取り、`BaseJob` オブジェクトを返します。
このオブジェクトはジョブを非同期に実行し、ジョブが完了すると「バックエンド」から結果を取得します。

「ジョブ」インスタンスは、サブミットされたジョブの「チケット」と見なせます。
ある時点、たとえばジョブがキューされたときや実行中、あるいは失敗したとき等で実行状態を検索し、ジョブを制御できます。

「ジョブ」の完了後は `result = job.result()` を使用してリモートの「バックエンド」から結果を取得します。
取得した結果オブジェクトには量子データが含まれ、通常は `result.get_counts(circuit)` を使用してやりとりします。
このメソッドでは量子回路から生のカウント数を取得でき、続けて Terra で提供される量子情報ツールを使用することで更に分析できます。



量子情報
^^^^^^^^^^^^^^^^^^^

量子コンピュータで実行される回路の、より高度なアルゴリズムや分析を実行するには量子情報タスクを実行するシンプルなツールが重要です。
これにはメトリックスを評価し、量子状態、演算子、チャネルを生成する方法が含まれます。


ビジュアライゼーションツール
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

「Terra」には量子回路をビジュアライズする多くのツールがあります。ツールを使用することで、量子回路が
実装したい形をしているかどうかを素早く確認できます。ツールにはテキスト版、python 版、LaTeX 版があります。
回路の実行後は、結果の表示が重要になります。量子回路から結果をプロットするシンプルな関数 `plot_histogram` があります。
これには対話バージョンもあります。また関数 `plot_state` と `plot_bloch_vector` は量子状態をプロットできます。
これらの関数は通常 `statevector_simulator` バックエンドに使用されますが、
状態トモグラフィー実験 (ignis) 後の実際のデータでも使用できます。


ライセンス
------------

このプロジェクトは `Apache License Version 2.0 software
license <https://www.apache.org/licenses/LICENSE-2.0>`__ を使用します。
